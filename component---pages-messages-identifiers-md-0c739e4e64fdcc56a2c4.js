(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{NBVO:function(e,t,i){"use strict";i.r(t),i.d(t,"_frontmatter",(function(){return b})),i.d(t,"default",(function(){return d}));var n=i("Fcif"),a=i("+I+c"),s=(i("mXGw"),i("/FXl")),r=i("TjRS"),b=(i("aD51"),{});void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"pages/Messages/Identifiers.md"}});var c={_frontmatter:b},o=r.a;function d(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(s.b)(o,Object(n.a)({},c,i,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"messages-identifiers"},"Messages Identifiers"),Object(s.b)("h2",{id:"specification-status"},"Specification Status"),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null},"Version"),Object(s.b)("th",{parentName:"tr",align:null},"Status"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},"0.1"),Object(s.b)("td",{parentName:"tr",align:null},"Tentative")))),Object(s.b)("h2",{id:"purpose"},"Purpose"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"Describe a means of uniquely identifying DSNP content messages"),Object(s.b)("li",{parentName:"ol"},"Describe potential extensions of identifiers for the future")),Object(s.b)("h2",{id:"assumptions"},"Assumptions"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"All assumptions from ",Object(s.b)("a",{parentName:"li",href:"/Messages/Overview"},"DSNP Messages"))),Object(s.b)("h2",{id:"identifiers"},"Identifiers"),Object(s.b)("p",null,"DSNP message identifiers at minimum consist of a string with three parts, a protocol, a user identifier and a content hash, like so:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},"dsnp://0123456789abcdef/0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\n")),Object(s.b)("p",null,"In this example, ",Object(s.b)("inlineCode",{parentName:"p"},"dsnp://")," is the protocol indicating that the latest version of this specification should be used.\n",Object(s.b)("inlineCode",{parentName:"p"},"0123456789abcdef")," is the identifier representing a user as described in the ",Object(s.b)("a",{parentName:"p",href:"/Identity/Registry"},"Identity Registry")," specification.\n",Object(s.b)("inlineCode",{parentName:"p"},"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef")," is the hash of the content as described in the ",Object(s.b)("a",{parentName:"p",href:"/Messages/Serialization"},"Messages Serialization")," specification."),Object(s.b)("h3",{id:"protocol"},"Protocol"),Object(s.b)("p",null,"As of this specification version, the protocol string should always be the string ",Object(s.b)("inlineCode",{parentName:"p"},"dsnp://"),".\nIn future specification versions, this string may change to indicate non-backward-compatible changes."),Object(s.b)("h3",{id:"user-identifier"},"User Identifier"),Object(s.b)("p",null,"The user identifier section of the identifier string should adhere to the relevant version of the ",Object(s.b)("a",{parentName:"p",href:"/Identity/Registry"},"Identity Registry")," specification.\nThis MUST be a hexadecimal representation of the user's 64 bit registry identifier number.\nFor example, ",Object(s.b)("inlineCode",{parentName:"p"},"0123456789abcdef")," would indicate user number 81,985,529,216,486,895."),Object(s.b)("h3",{id:"content-hash"},"Content Hash"),Object(s.b)("p",null,"The content hash section of the identifier string should be a ",Object(s.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SHA-3"},"keccak-256")," hash of the content of the message as stored at the URI provided in the DSNP announcement.\nThis string should be identical to the ",Object(s.b)("inlineCode",{parentName:"p"},"contentHash")," field as described in the ",Object(s.b)("a",{parentName:"p",href:"/Messages/Overview"},"Message Overview"),"."))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"pages/Messages/Identifiers.md"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---pages-messages-identifiers-md-0c739e4e64fdcc56a2c4.js.map