(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{Dx6P:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return o})),t.d(n,"default",(function(){return l}));var a=t("Fcif"),r=t("+I+c"),i=(t("mXGw"),t("/FXl")),s=t("TjRS"),o=(t("aD51"),{});void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"pages/Messages/Ordering.md"}});var c={_frontmatter:o},b=s.a;function l(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)(b,Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"messages-ordering"},"Messages Ordering"),Object(i.b)("h2",{id:"specification-status"},"Specification Status"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Version"),Object(i.b)("th",{parentName:"tr",align:null},"Status"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"0.1"),Object(i.b)("td",{parentName:"tr",align:null},"Tentative")))),Object(i.b)("h2",{id:"purpose"},"Purpose"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Describe a standard for ordering DSNP messages and resolving conflicts in DSNP message with time dependent context.")),Object(i.b)("h2",{id:"assumptions"},"Assumptions"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"All assumptions from ",Object(i.b)("a",{parentName:"li",href:"/Messages/Overview"},"DSNP Messages"))),Object(i.b)("h2",{id:"ordering"},"Ordering"),Object(i.b)("p",null,"DSNP messages must be ordered at the highest level by the block number of the block in which a message's batch is announced with higher block numbers indicating announcements that are sorted after announcements announced in lower block numbers.\nAfter block number, announcements published in the same block must be ordered by the transaction index with higher transaction indices indicating announcements that are sorted after announcements in lower transaction indices.\nAfter transaction index, announcements within the same transaction must be ordered by log index with higher log indices representing announcements that are sorted after announcements with lower log indices.\nAfter announcement order, messages must be sorted as they appear in a batch file with higher row numbers indicating announcements that are sorted after announcements with lower row numbers."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Block Number Ascending"),Object(i.b)("li",{parentName:"ol"},"Transaction Index Ascending"),Object(i.b)("li",{parentName:"ol"},"Log Index Ascending"),Object(i.b)("li",{parentName:"ol"},"Batch File Row Index Ascending")))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"pages/Messages/Ordering.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---pages-messages-ordering-md-dc2aad717b49499a2dc1.js.map