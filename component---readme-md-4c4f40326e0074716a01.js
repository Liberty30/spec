(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"7OsV":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return b})),a.d(t,"default",(function(){return l}));var n=a("Fcif"),r=a("+I+c"),i=(a("mXGw"),a("/FXl")),o=a("TjRS"),b=(a("aD51"),{});void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"README.md"}});var s={_frontmatter:b},c=o.a;function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)(c,Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"liberty-protocol-spec"},"Liberty Protocol Spec"),Object(i.b)("p",null,"This repository holds the technical specification for the Liberty Protocol.\nThe current official specification can be viewed in its compiled form ",Object(i.b)("a",{parentName:"p",href:"TBD"},"here"),".\nAlternatively, the latest iteration of the spec can be viewed non-formatted ",Object(i.b)("a",{parentName:"p",href:"tree/main/pages"},"here"),"."),Object(i.b)("h2",{id:"running-locally"},"Running Locally"),Object(i.b)("p",null,"To run the spec generator locally and preview the formatted spec website, use the following commands:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"npm install\nnpm run dev\n")),Object(i.b)("p",null,"Once the local server is running, a live-reloading preview of the spec can be viewed at http://localhost:3000."),Object(i.b)("h2",{id:"tools-and-frameworks-used-in-this-repo"},"Tools and frameworks used in this repo"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://www.docz.site/"},"Docz")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://mdxjs.com/"},"MDX"))),Object(i.b)("h1",{id:"contributing-a-specification"},"Contributing a specification"),Object(i.b)("h3",{id:"formatting-names-etc"},"Formatting, names, etc."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"The initial spec status is ",Object(i.b)("em",{parentName:"p"},"Draft"),".  Please see ",Object(i.b)("a",{parentName:"p",href:"#Process"},"Process")," for details.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Choose a target version number of the platform for the spec.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Use the official outline for specifications. Respect and observe good file organization practices. For example, if your spec relates to DSNP please put the spec in the ",Object(i.b)("em",{parentName:"p"},"DSNP")," folder and not anywhere else.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Spec files are written in Markdown format, and are located in the ",Object(i.b)("em",{parentName:"p"},"pages")," directory.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Use dashes (",Object(i.b)("inlineCode",{parentName:"p"},"-"),") between words in file names so that they appear in the Table of Contents correctly.  Use MDX format (",Object(i.b)("inlineCode",{parentName:"p"},".mdx")," extension) if you want to import React components in the page.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"When documenting an API, et, use the following table style:"),Object(i.b)("table",{parentName:"li"},Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"name"),Object(i.b)("th",{parentName:"tr",align:null},"description"),Object(i.b)("th",{parentName:"tr",align:null},"type"),Object(i.b)("th",{parentName:"tr",align:null},"required?"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"dsnpHash"),Object(i.b)("td",{parentName:"tr",align:null},"a description of dsnpHash"),Object(i.b)("td",{parentName:"tr",align:null},"bytes"),Object(i.b)("td",{parentName:"tr",align:null},"YES"))))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Sort definitions and descriptions alphabetically")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Put images into the ",Object(i.b)("inlineCode",{parentName:"p"},"images")," folder and link to them using their URL in the GitHub repo."))),Object(i.b)("h3",{id:"choosing-a-version"},"Choosing a version"),Object(i.b)("p",null,"We will be using semver style versioning.\nAs of the time of this writing, what features go under what version numbers hasn't been settled.\nPlease choose 0.1 for the version until further notice."),Object(i.b)("h2",{id:"spec-status-definitions"},"Spec status definitions"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Draft"),Object(i.b)("td",{parentName:"tr",align:null},"Spec is posted as draft PR. It's open for comment and major changes.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Proposed"),Object(i.b)("td",{parentName:"tr",align:null},"Ready for formal review. It should be done except for minor changes.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Tentative"),Object(i.b)("td",{parentName:"tr",align:null},"This is the accepted plan. The spec should not change unless there are blocking issues.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Final"),Object(i.b)("td",{parentName:"tr",align:null},"This version will not change. Changes require a new spec process and new spec version number.")))),Object(i.b)("h2",{id:"process"},"Process"),Object(i.b)("h3",{id:"new-specs"},"New Specs"),Object(i.b)("p",null,"For a completely new specification,"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Spec writer(s) post a GitHub "draft PR" with their draft of a spec. This spec is open for lengthy discussion, major changes if needed.'),Object(i.b)("li",{parentName:"ol"},'Once the discussions have been resolved by the spec writer(s), they take the PR+status out of "Draft" and change the status to "Proposed". The only changes that should be occurring by this point are minor ones, like reorganizing a section, clarifications, language errors.'),Object(i.b)("li",{parentName:"ol"},'Just before the spec is merged to main, the spec status should be changed to "Tentative."'),Object(i.b)("li",{parentName:"ol"},"Once the spec has been solidified, i.e. we've built pretty much everything and we know things aren't going to change -- the spec status should be changed to Final. Maybe this is reserved only for specs that are at a new major version?")),Object(i.b)("p",null,'Once the spec is in "Tentative", any major changes require a new spec process (see below).'),Object(i.b)("h3",{id:"new-spec-versions"},"New Spec Versions"),Object(i.b)("p",null,"For updates to an existing spec,"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Leave the spec as-is in main."),Object(i.b)("li",{parentName:"ol"},"Follow the process for New Specs, above, through step 3, except bump the version as appropriate when you post the Draft PR."),Object(i.b)("li",{parentName:"ol"},'Once the updated spec is merged, the current spec shows "Tentative" status, + the new version number.'),Object(i.b)("li",{parentName:"ol"},"Proceed with step 4 as before, as appropriate.")))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"README.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---readme-md-4c4f40326e0074716a01.js.map